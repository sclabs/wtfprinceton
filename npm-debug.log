0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node',
1 verbose cli   '/usr/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'node-inspector' ]
2 info using npm@1.3.11
3 info using node@v0.10.21
4 verbose cache add [ 'node-inspector', null ]
5 verbose cache add name=undefined spec="node-inspector" args=["node-inspector",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'node-inspector',
6 verbose parsed url   path: 'node-inspector',
6 verbose parsed url   href: 'node-inspector' }
7 silly lockFile 4198ef9e-node-inspector node-inspector
8 verbose lock node-inspector /home/thomas/.npm/4198ef9e-node-inspector.lock
9 silly lockFile 4198ef9e-node-inspector node-inspector
10 silly lockFile 4198ef9e-node-inspector node-inspector
11 verbose addNamed [ 'node-inspector', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile e68b88da-node-inspector node-inspector@
14 verbose lock node-inspector@ /home/thomas/.npm/e68b88da-node-inspector.lock
15 silly addNameRange { name: 'node-inspector', range: '*', hasData: false }
16 verbose url raw node-inspector
17 verbose url resolving [ 'https://registry.npmjs.org/', './node-inspector' ]
18 verbose url resolved https://registry.npmjs.org/node-inspector
19 info trying registry request attempt 1 at 16:59:10
20 verbose etag "1RBAM0VIN0I1J5TFOJLCFTNGL"
21 http GET https://registry.npmjs.org/node-inspector
22 http 304 https://registry.npmjs.org/node-inspector
23 silly registry.get cb [ 304,
23 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
23 silly registry.get     etag: '"1RBAM0VIN0I1J5TFOJLCFTNGL"',
23 silly registry.get     date: 'Wed, 13 Nov 2013 20:59:11 GMT',
23 silly registry.get     'content-length': '0' } ]
24 verbose etag node-inspector from cache
25 silly addNameRange number 2 { name: 'node-inspector', range: '*', hasData: true }
26 silly addNameRange versions [ 'node-inspector',
26 silly addNameRange   [ '0.0.1',
26 silly addNameRange     '0.0.2',
26 silly addNameRange     '0.0.3',
26 silly addNameRange     '0.0.4',
26 silly addNameRange     '0.1.0',
26 silly addNameRange     '0.1.1',
26 silly addNameRange     '0.1.2',
26 silly addNameRange     '0.1.3',
26 silly addNameRange     '0.1.4',
26 silly addNameRange     '0.1.5',
26 silly addNameRange     '0.1.6',
26 silly addNameRange     '0.1.7',
26 silly addNameRange     '0.1.8',
26 silly addNameRange     '0.1.9',
26 silly addNameRange     '0.1.10',
26 silly addNameRange     '0.3.0',
26 silly addNameRange     '0.3.1',
26 silly addNameRange     '0.3.2',
26 silly addNameRange     '0.3.3',
26 silly addNameRange     '0.3.4',
26 silly addNameRange     '0.4.0',
26 silly addNameRange     '0.5.0',
26 silly addNameRange     '0.6.0',
26 silly addNameRange     '0.2.0-beta1',
26 silly addNameRange     '0.2.0-beta2',
26 silly addNameRange     '0.2.0-beta3',
26 silly addNameRange     '0.2.0-beta4',
26 silly addNameRange     '0.3.0-preview1' ] ]
27 verbose addNamed [ 'node-inspector', '0.6.0' ]
28 verbose addNamed [ '0.6.0', '0.6.0' ]
29 silly lockFile 6554d661-node-inspector-0-6-0 node-inspector@0.6.0
30 verbose lock node-inspector@0.6.0 /home/thomas/.npm/6554d661-node-inspector-0-6-0.lock
31 silly lockFile 6554d661-node-inspector-0-6-0 node-inspector@0.6.0
32 silly lockFile 6554d661-node-inspector-0-6-0 node-inspector@0.6.0
33 silly lockFile e68b88da-node-inspector node-inspector@
34 silly lockFile e68b88da-node-inspector node-inspector@
35 silly resolved [ { name: 'node-inspector',
35 silly resolved     version: '0.6.0',
35 silly resolved     description: 'Web Inspector based nodeJS debugger',
35 silly resolved     homepage: 'http://github.com/node-inspector/node-inspector',
35 silly resolved     author: { name: 'Danny Coates', email: 'dannycoates@gmail.com' },
35 silly resolved     keywords: [ 'debug', 'debugger', 'inspector', 'profiler' ],
35 silly resolved     repository:
35 silly resolved      { type: 'git',
35 silly resolved        url: 'http://github.com/node-inspector/node-inspector.git' },
35 silly resolved     engines: { node: '>=0.8.0' },
35 silly resolved     bin: { 'node-inspector': './bin/inspector.js' },
35 silly resolved     dependencies:
35 silly resolved      { 'socket.io': '~0.9.14',
35 silly resolved        express: '~3.4',
35 silly resolved        async: '~0.2.8',
35 silly resolved        glob: '~3.2.1',
35 silly resolved        rc: '~0.3.0',
35 silly resolved        'strong-data-uri': '~0.1.0' },
35 silly resolved     devDependencies: { mocha: 'latest', chai: 'latest' },
35 silly resolved     preferGlobal: true,
35 silly resolved     scripts: { test: 'mocha', lint: './tools/gjslint.sh' },
35 silly resolved     contributors:
35 silly resolved      [ [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object] ],
35 silly resolved     readme: '# Node Inspector\n\n[![Build Status](https://travis-ci.org/node-inspector/node-inspector.png?branch=master)](https://travis-ci.org/node-inspector/node-inspector)\n[![Dependency Status](https://gemnasium.com/node-inspector/node-inspector.png)](https://gemnasium.com/node-inspector/node-inspector)\n[![NPM version](https://badge.fury.io/js/node-inspector.png)](http://badge.fury.io/js/node-inspector)\n\n\n## Overview\nNode Inspector is a debugger interface for node.js using the\nBlink Developer Tools (former WebKit Web Inspector).\n\n## Features\n\nThe Blink DevTools debugger is a great javascript debugger interface;\nit works just as well for node. Node Inspector supports almost all\nof the debugging features of DevTools.\n\n* Navigate in your source files\n* Set breakpoints (and specify trigger conditions)\n* Break on exceptions\n* Step over, step in, step out, resume (continue)\n* Continue to location\n* Disable/enable all breakpoints\n* Inspect scopes, variables, object properties\n* Hover your mouse over an expression in your source to display its value in\n  a tooltip\n* Edit variables and object properties\n* (etc.)\n\n### Cool stuff\n* Node Inspector uses WebSockets, so no polling for breaks.\n* Remote debugging\n* [Live edit of running code](http://github.com/dannycoates/node-inspector/wiki/LiveEdit),\n  optionally persisting changes back to the file-system.\n* Set breakpoints in files that are not loaded into V8 yet - useful for\n  debugging module loading/initialization.\n* Javascript from top to bottom :)\n* Embeddable in other applications - see [Embedding HOWTO](docs/embedding.md)\n  for more details.\n\n## Known Issues\n\nThis is beta-quality code, so use at your own risk.\n\n* Be careful about viewing the contents of Buffer objects,\n  each byte is displayed as an individual array element;\n  for most Buffers this will take too long to render.\n* While not stopped at a breakpoint the console doesn\'t always\n  behave as you might expect. See issue #146.\n* Profiler is not implemented yet. Have a look at\n  [node-webkit-agent](https://github.com/c4milo/node-webkit-agent)\n  in the meantime.\n* Break on uncaught exceptions does not work because of missing\n  [support in node](https://github.com/joyent/node/pull/5713).\n* Debugging multiple processes (e.g. cluster) is cumbersome.\n\n## Getting Started\n\n### Requirements\n\n* [node.js](http://github.com/ry/node)\n  - version 0.8 or later\n* [npm](http://github.com/isaacs/npm)\n* A Blink-based browser (i.e. Google Chrome)\n\n### Install\n\n* With [npm](http://github.com/isaacs/npm)\n\n        $ npm install -g node-inspector\n\n### Enable debug mode\n\nTo use node-inspector, enable debugging on the node you wish to debug.\nYou can either start node with a debug flag like:\n\n    $ node --debug your/node/program.js\n\nor, to pause your script on the first line:\n\n    $ node --debug-brk your/short/node/script.js\n\nOr you can enable debugging on a node that is already running by sending\nit a signal:\n\n1. Get the PID of the node process using your favorite method.\n`pgrep` or `ps -ef` are good\n\n\t\t$ pgrep -l node\n\t\t2345 node your/node/server.js\n\n2. Send it the USR1 signal\n\n\t\t$ kill -s USR1 2345\n\nGreat! Now you are ready to attach node-inspector.\n\n#### Windows\n\nWindows does not support UNIX signals. To enable debugging, you can use\nan undocumented API function `process._debugProcess(pid)`:\n\n1. Get the PID of the node process using your favorite method, e.g.\n\n    ```sh\n    > tasklist /FI "IMAGENAME eq node.exe"\n\n    Image Name                     PID Session Name        Session#    Mem Usage\n    ========================= ======== ================ =========== ============\n    node.exe                      3084 Console                    1     11,964 K\n    ```\n\n2. Call the API:\n\n    ```sh\n    > node -e "process._debugProcess(3084)"\n    ```\n\nGreat! Now you are ready to attach the inspector.\n\n### Debugging\n\n1. start the inspector. I usually put it in the background\n\n\t\t$ node-inspector &\n\n2. open http://127.0.0.1:8080/debug?port=5858 in Chrome\n\n3. you should now see the javascript source from node. If you don\'t, click the scripts tab.\n\n4. select a script and set some breakpoints (far left line numbers)\n\n5. then watch the [screencasts](http://www.youtube.com/view_play_list?p=A5216AC29A41EFA8)\n\nFor more information on getting started see the [wiki](http://github.com/dannycoates/node-inspector/wiki/Getting-Started---from-scratch)\n\nnode-inspector works almost exactly like the web inspector in\nChrome. Here\'s a good [overview](http://code.google.com/chrome/devtools/docs/scripts.html) of the UI\n\n### Inspector options\n\nNode-inspector uses [rc](https://npmjs.org/package/rc)\n[[github]](https://github.com/dominictarr/rc) module to collect options.\n\nPlaces for configuration:\n* command line arguments (parsed by optimist)\n* enviroment variables prefixed with ```node-inspector_```\n* if you passed an option ```--config file``` then from that file\n* a local ```.node-inspectorrc``` or the first found looking in ```./ ../ ../../\n ../../../``` etc.\n* ```$HOME/.node-inspectorrc```\n* ```$HOME/.node-inspector/config```\n* ```$HOME/.config/node-inspector```\n* ```$HOME/.config/node-inspector/config```\n* ```/etc/node-inspectorrc```\n* ```/etc/node-inspector/config```\n* options from ```config.json``` for backward compatibility\n* defaults described in Node Inspector`s [./lib/config.js](lib/config.js).\n\nAll configuration sources that where found will be flattened into one object,\nso that sources earlier in this list override later ones.\n\n\n\nList of predefined options:\n```\n         Option              Default                  Description\n    --help               |             | Print information about options\n    --web-port           |    8080     | Port to host the inspector\n    --web-host           |  127.0.0.1  | Host to listen on\n    --debug-port         |    5858     | Port to connect to the debugging app\n    --save-live-edit     |    false    | Save live edit changes to disk\n                         |             |   (update the edited files)\n    --hidden             |     []      | Array of files to hide from the UI\n                         |             |   (breakpoints in these files will be ignored)\n    --stack-trace-limit  |     50      | Number of stack frames to show on a breakpoint\n```\n\n## FAQ / WTF\n\n1. My script runs too fast to attach the debugger.\n\n  > use `--debug-brk` to pause the script on the first line\n\n2. I got the ui in a weird state.\n\n  > when in doubt, refresh\n\n3. Can I debug remotely?\n\n  > Yes. node-inspector must be running on the same machine,\n  > but your browser can be anywhere.\n  > Just make sure port 8080 is accessible\n\n4. How to specify list of files to hide?\n\n  > Create a JSON-encoded array, don\'t forget to escape the quote characters\n  > when using a command-line option.\n  >\n  >     $ node-inspector --hidden=\'["node_modules/framework"]\'\n  >\n  > Note that the array items are interpreted as regular expressions.\n\n5. UI doesn\'t load or doesn\'t work and refresh didn\'t help\n\n  > Make sure that you have adblock disabled as well as any other content\n  > blocking scripts and plugins.\n\n## Contributing Code\n\nMaking Node Inspector the best debugger for node.js cannot be achieved without\nthe help of the community. The following resources should help you to get\nstarted.\n\n* [Contributing](https://github.com/node-inspector/node-inspector/wiki/Contributing)\n* [Developer\'s Guide](https://github.com/node-inspector/node-inspector/wiki/Developer%27s-Guide)\n* [Easy Picks](https://github.com/node-inspector/node-inspector/issues?direction=asc&labels=Easy+Pick&page=1&sort=updated&state=open)\n\n## Thanks\n\n[Danny Coates](https://github.com/dannycoates) for starting the project\nand maintaining it for several years.\n\n[StrongLoop](http://strongloop.com) for upgrading to the Blink front-end\nand maintaining the project onwards.\n\nAnd of course all developers that contributed patches and features, as listed\nin the [AUTHORS](AUTHORS) file.\n',
35 silly resolved     readmeFilename: 'readme.md',
35 silly resolved     bugs: { url: 'https://github.com/node-inspector/node-inspector/issues' },
35 silly resolved     _id: 'node-inspector@0.6.0',
35 silly resolved     _from: 'node-inspector@' } ]
36 info install node-inspector@0.6.0 into /usr/lib
37 info installOne node-inspector@0.6.0
38 info /usr/lib/node_modules/node-inspector unbuild
39 info /usr/lib/node_modules/node-inspector unbuild
40 error error rolling back Error: EACCES, unlink '/usr/lib/node_modules/node-inspector'
40 error error rolling back  node-inspector@0.6.0 { [Error: EACCES, unlink '/usr/lib/node_modules/node-inspector']
40 error error rolling back   errno: 3,
40 error error rolling back   code: 'EACCES',
40 error error rolling back   path: '/usr/lib/node_modules/node-inspector' }
41 error Error: EACCES, unlink '/usr/lib/node_modules/node-inspector'
41 error  { [Error: EACCES, unlink '/usr/lib/node_modules/node-inspector']
41 error   errno: 3,
41 error   code: 'EACCES',
41 error   path: '/usr/lib/node_modules/node-inspector' }
42 error Please try running this command again as root/Administrator.
43 error System Linux 3.9.4-1-ARCH
44 error command "/usr/bin/node" "/usr/bin/npm" "install" "-g" "node-inspector"
45 error cwd /home/thomas/meteor/wtfprinceton
46 error node -v v0.10.21
47 error npm -v 1.3.11
48 error path /usr/lib/node_modules/node-inspector
49 error code EACCES
50 error errno 3
51 error stack Error: EACCES, unlink '/usr/lib/node_modules/node-inspector'
52 verbose exit [ 3, true ]
